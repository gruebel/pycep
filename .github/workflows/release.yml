name: Release

on:
  push:
    tags:
      - "*.*.*"

permissions:
  contents: read

env:
  UV_VERSION: "0.6.x"

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      # IMPORTANT: this permission is mandatory for trusted publishing to pypi
      id-token: write
    outputs:
      version: ${{ steps.version.outputs.current-version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: master
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version-file: '.python-version'
      - name: Set up uv ${{ env.UV_VERSION }}
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install dependencies
        run: uv sync --no-dev
      - name: Bump version
        id: version
        uses: callowayproject/bump-my-version@a2c562f686c643f39425e34af8101c661968d039  # 1.0.2
        with:
          args: '--new-version ${{ github.ref_name }}'
      - name: Release version ${{ github.ref_name }}
        id: version
        run: |
          # commit and push
          git config --global user.name 'gruebel'
          git config --global user.email 'gruebel@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "publish version ${{ steps.version.outputs.current-version }}"
          git push

          echo "version=$new_version" >> $GITHUB_OUTPUT
      - name: Build Python package
        run: uv build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@9989ccec43d726ef05aa1cd7b2854fb96b6df6ab  # v2.2.0
      - name: Create GitHub Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda  # v2.2.1
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}

  create-pr:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout checkov
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: bridgecrewio/checkov
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version-file: '.python-version'
      - name: Prepare PR
        run: |
          # install needed tools
          python -m pip install --no-cache-dir --upgrade pipenv "pipenv-setup[black]" "vistir<0.7.0"

          # update Pipfile
          pipenv --python ${{ env.MIN_PYTHON_VERSION }}
          pipenv install pycep-parser==${{ needs.release.outputs.version }}
          pipenv lock

          # update setup.py
          pipenv-setup sync --pipfile
      - name: Create PR
        uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f  # v7.0.6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: update-pycep-parser-dep
          delete-branch: true
          commit-message: update pycep-parser version
          title: "chore: update pycep-parser version to ${{ needs.bump-version.outputs.version }}"
          body: |
            - Automatic update of pycep-parser
            powered by [create-pull-request](https://github.com/peter-evans/create-pull-request) GHA
