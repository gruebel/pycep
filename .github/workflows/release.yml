name: Release

on:
  push:
    tags:
      - "*.*.*"

permissions: read-all

env:
  POETRY_VERSION: "1.1.12"
  MIN_PYTHON_VERSION: "3.7"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579  # v2.4.0
        with:
          ref: master
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a  # v2.3.2
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - name: Set up poetry ${{ env.POETRY_VERSION }}
        uses: abatilo/actions-poetry@7044c9c69e0265717d52471f66033b8d0e2a69ff  # v2.1.4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install --no-dev
      - name: Release version ${{ github.ref_name }}
        run: |
          # bump version
          poetry version $GITHUB_REF_NAME
          new_version=$(poetry version -s)

          # commit and push
          git config --global user.name 'gruebel'
          git config --global user.email 'gruebel@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "publish version ${new_version}"
          git push
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@48637c28a2d9725d8f4bc0f1094e7b8e2bea7142  # v1.12.0
      - name: Create GitHub Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5  # v0.1.14
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
