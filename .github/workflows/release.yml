name: Release

on:
  push:
    tags:
      - "*.*.*"

permissions: read-all

env:
  POETRY_VERSION: "1.8.2"
  MIN_PYTHON_VERSION: "3.8"

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      # IMPORTANT: this permission is mandatory for trusted publishing to pypi
      id-token: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: master
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - name: Set up poetry ${{ env.POETRY_VERSION }}
        run: |
          pip install poetry==${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install --no-dev
      - name: Release version ${{ github.ref_name }}
        id: version
        run: |
          # bump version
          poetry version $GITHUB_REF_NAME
          new_version=$(poetry version -s)

          # commit and push
          git config --global user.name 'gruebel'
          git config --global user.email 'gruebel@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "publish version ${new_version}"
          git push

          echo "version=$new_version" >> $GITHUB_OUTPUT
      - name: Build Python package
        run: poetry build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf  # v1.8.11
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@4a5a562549e21065f6791b32ec5415bd33045cd2  # v2.1.0
      - name: Create GitHub Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844  # v0.1.15
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}

  create-pr:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout checkov
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: bridgecrewio/checkov
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - name: Prepare PR
        run: |
          # install needed tools
          python -m pip install --no-cache-dir --upgrade pipenv "pipenv-setup[black]" "vistir<0.7.0"

          # update Pipfile
          pipenv --python ${{ env.MIN_PYTHON_VERSION }}
          pipenv install pycep-parser==${{ needs.release.outputs.version }}
          pipenv lock

          # update setup.py
          pipenv-setup sync --pipfile
      - name: Create PR
        uses: peter-evans/create-pull-request@b1ddad2c994a25fbc81a28b3ec0e368bb2021c50  # v6.0.0
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: update-pycep-parser-dep
          delete-branch: true
          commit-message: update pycep-parser version
          title: "chore: update pycep-parser version to ${{ needs.bump-version.outputs.version }}"
          body: |
            - Automatic update of pycep-parser
            powered by [create-pull-request](https://github.com/peter-evans/create-pull-request) GHA
