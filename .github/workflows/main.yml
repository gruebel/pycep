name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/**'
      - '.pre-commit-config.yaml'
  pull_request:

permissions:
  contents: read

env:
  UV_VERSION: "0.6.x"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version-file: '.python-version'
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd  # v3.0.1

  tests:
    needs: pre-commit
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        experimental: [false]
#        include:
#          - os: ubuntu-latest
#            python-version: "3.14"
#            experimental: true
      fail-fast: false
    continue-on-error: ${{ matrix.experimental }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Set up uv ${{ env.UV_VERSION }}
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Install dependencies
        run: uv sync
      - name: Install pytest plugin
        run: uv pip install pytest-github-actions-annotate-failures
      - name: Run pytest
        run: uv run pytest
      - if: matrix.os == 'ubuntu-latest' && matrix.python-version == env.MIN_PYTHON_VERSION
        name: Create coverage report
        run: |
          uv pip install pytest-cov
          uv run pytest -s --cov=pycep --cov-report=lcov
      - if: matrix.os == 'ubuntu-latest' && matrix.python-version == env.MIN_PYTHON_VERSION && github.repository == 'gruebel/pycep'
        name: Upload coverage to coveralls
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b  # v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - if: matrix.os == 'ubuntu-latest' && matrix.python-version == env.MIN_PYTHON_VERSION && github.repository == 'gruebel/pycep'
        name: Upload coverage to codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574  # v5.4.0
        with:
          flags: unittests
          fail_ci_if_error: false

  publish:
    if: github.event_name == 'push'
    needs: tests
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      # IMPORTANT: this permission is mandatory for trusted publishing to pypi
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version-file: '.python-version'
      - name: Set up uv ${{ env.UV_VERSION }}
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Install dependencies
        run: uv sync --no-dev
      - name: Bump prerelease version
        id: version
        uses: callowayproject/bump-my-version@a2c562f686c643f39425e34af8101c661968d039  # 1.0.2
        with:
          args: 'pre_n'
      - name: Commit version bump
        run: |
          # commit and push
          git config --global user.name 'gruebel'
          git config --global user.email 'gruebel@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "publish version ${{ steps.version.outputs.current-version }}"
          git push
      - name: Build Python package
        run: uv build
      - name: Publish prerelease to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
