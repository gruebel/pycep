name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions: read-all

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - uses: pre-commit/action@v2.0.3

  tests:
    needs: pre-commit
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        poetry-version: ["1.1.12"]
        experimental: [false]
        include:
          - os: ubuntu-latest
            python-version: "3.11-dev"
            poetry-version: "1.1.12"
            experimental: true
      fail-fast: false
    continue-on-error: ${{ matrix.experimental }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Set up poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.1.3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Install pytest plugin
        run: poetry run pip install pytest-github-actions-annotate-failures
      - name: Run pytest
        run: poetry run python -m pytest tests/
      - if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'
        name: Create coverage report
        run: |
          poetry run pip install pytest-cov
          poetry run python -m pytest -s --cov=pycep --cov-report=xml tests/
      - if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7' && github.repository == 'gruebel/pycep'
        name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          flags: unittests

  publish:
    if: github.event_name == 'push'
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Set up poetry 1.1.12
        uses: abatilo/actions-poetry@v2.1.3
        with:
          poetry-version: "1.1.12"
      - name: Install dependencies
        run: poetry install --no-dev
      - name: Bump prerelease version
        run: |
          # bump version
          poetry version prerelease
          new_version=$(poetry version -s)

          # commit and push
          git config --global user.name 'gruebel'
          git config --global user.email 'gruebel@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "publish version ${new_version}"
          git push
      - name: Publish prerelease to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build
