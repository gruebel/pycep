{
  "globals": {
    "scope": {
      "value": "resourceGroup"
    }
  },
  "resources": {
    "storageAccount": {
      "decorators": [],
      "type": "Microsoft.Storage/storageAccounts",
      "api_version": "2019-06-01",
      "existing": false,
      "config": {
        "name": "${toLower(storageNamePrefix)}${uniqueString(resourceGroup().id)}",
        "location": {
          "function": {
            "type": "resource_group",
            "parameters": {
              "resource_group_name": null,
              "subscription_id": null
            },
            "property_name": "location"
          }
        },
        "sku": {
          "name": "storageAccountType"
        },
        "kind": "StorageV2",
        "properties": {
          "networkAcls": {
            "bypass": "string",
            "defaultAction": "string",
            "ipRules": [
              {
                "action": "Allow",
                "value": "string"
              }
            ],
            "resourceAccessRules": [
              {
                "resourceId": "string",
                "tenantId": "string"
              }
            ],
            "virtualNetworkRules": [
              {
                "action": "Allow",
                "id": "string",
                "state": "string"
              }
            ]
          }
        }
      }
    },
    "function": {
      "decorators": [],
      "type": "Microsoft.Web/sites/functions",
      "api_version": "2020-06-01",
      "existing": false,
      "config": {
        "name": "${functionApp.name}/${functionNameComputed}",
        "properties": {
          "config": {
            "disabled": false,
            "bindings": [
              {
                "name": "req",
                "type": "httpTrigger",
                "direction": "in",
                "authLevel": "function",
                "methods": [
                  "get"
                ]
              },
              {
                "name": "$return",
                "type": "http",
                "direction": "out"
              }
            ]
          },
          "files": {
            "'run.csx'": "#r \"Newtonsoft.Json\"\n\nusing System.Net;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Primitives;\nusing Newtonsoft.Json;\n\npublic static async Task<IActionResult> Run(HttpRequest req, ILogger log)\n{\n      log.LogInformation(\"C# HTTP trigger function processed a request.\");\n\n    string name = req.Query[\"name\"];\n\n    string requestBody = await new StreamReader(req.Body).ReadToEndAsync();\n    dynamic data = JsonConvert.DeserializeObject(requestBody);\n    name = name ?? data?.name;\n\n    string responseMessage = string.IsNullOrEmpty(name)\n        ? \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\"\n                : $\"Hello, {name}. This HTTP triggered function executed successfully.\";\n\n            return new OkObjectResult(responseMessage);\n}\n"
          }
        }
      }
    }
  }
}
